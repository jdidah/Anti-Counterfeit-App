Software resources
i.	Programming language
This system is developed by mainly Hyperledger. The coding functionality of the system ensures that it runs appropriately and fulfills the functional requirements of the system. Hyperledger has different frameworks that ensure integration modules and defines the overall coding aspect. Hyperledger Fabric framework (HLF) is used since it allows entities to conduct confidential transactions without passing information through a central authority. This is accomplished through different channels that run within the network, as well as the division of labor that characterizes the different nodes within the network. Lastly, it is important to remember that, unlike Bitcoin, which is a public chain, Hyperledger Fabric supports permissioned deployments.
HLF offers a permissioned blockchain platform, including consensus models, membership service and smart contracts (“chain code”) written in Java, JavaScript or golang. It is just a platform for other projects to use and does not focus on any specific use case by itself.
This system is written in JavaScript.

ii.	Hyperledger Modules
The Hyperledger modules are auxiliary software used for things like deploying and maintaining blockchains, examining the data on the ledgers, as well as tools to design, prototype, and extend blockchain networks.
Hyperledger Composer provides a suite of tools for building blockchain business networks. These tools allow one to:
	Model the business blockchain network
	Generate REST APIs for interacting with the blockchain network
	Generate a skeleton Angular application
Hyperledger Composer is a node.js based modelling and development tool for distributed business applications built on HLF. It offers its own modelling language CTO, the creation of smart contracts and extensive testing capabilities. Composer sits on top of HLF and can directly interface with its containers, providing a level of abstraction between low-level processes and business logic (e.g. for identity management). It also provides a sandbox mode, “Composer Playground”, that simulates an HLF inside a web browser. This is great for developing and testing your model without actually going through the effort of deploying it on a real HLF.

iii.	Google Chrome
This platform is necessary for running the system itself since it is accessed through the browser. Google chrome is the best browser to use while interacting with the system due to the speed and quick responsive.

Development Language for the User Interface
a)	CSS
CSS is the language for describing the presentation of Web pages, including colors, layout, and fonts. It allows one to adapt the presentation to different types of devices, such as large screens, small screens, or printers. CSS is independent of HTML and can be used with any XML-based markup language.

b)	HTML  
Hypertext Markup Language (HTML) is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript.

c)	JavaScript
JavaScript is a high level, dynamic, untyped, and interpreted programming language. It has been standardized in the ECMAScript language specification. Alongside HTML and CSS, it is one of the three essential technologies of World Wide Web content production; the majority of websites employ it and it is supported by all modern web browsers without plug-ins. JavaScript is prototype-based with first-class functions, making it a multi-paradigm language, supporting object-oriented, imperative, and functional programming styles. It has an API for working with text, arrays, dates and regular expressions, but does not include any I/O, such as networking, storage or graphics facilities, relying for these upon the host environment in which it is embedded.
AngularJS AngularJS is the most preferred framework for creating interactive components of a website. It was designed as a full-featured JavaScript framework to enhance simplicity and efficiency. AngularJS is very effective especially in creating dynamic, single page apps, and supporting MVC (Model View Controller) programming structure.


